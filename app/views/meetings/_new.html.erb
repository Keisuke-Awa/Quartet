<%= form_with(model: @meeting, local: true, class: "form meeting-form") do |f| %>
  <!-- <div class="form-group">
    <%= f.hidden_field :user_id, value: current_user.id, class: "form-control" %>
  </div> -->
  <div id="firstMeetingForm">
    <div class="field">
      <%= f.collection_select :place_id, @places, :id, :name,
                { include_blank: true, required: true }, { class: "select-field text-field" } %>
      <%= f.label :place_id, "開催場所" %>
      <span class="focus-line"></span>
    </div>
    <div class="form-group">
      <%= f.label :people, "参加人数:", class: "mt-4" %>
      <%= f.number_field :people, min: 2, max: 10, class: "mb-4" %>
    </div>
    <div class="field">
      <%= f.select :people, @people, { include_blank: true, required: true }, { class: "select-field text-field" } %>
      <%= f.label :people, "人数" %>
      <span class="focus-line"></span>
    </div>
    <div class="form-group">
      <%= f.label :meet_at, "開催日時:", class: "mt-4"%>
      <%= f.datetime_field	:meet_at, class: "mb-4" %>
    </div>
    <div class="btn btn-yellow" id="nextButton">次へ</div>
  </div>
  <div id="secondMeetingForm">
    <div class="form-group">
      <%= f.label :tag_list %>
      <%= f.hidden_field :tag_list, value: @meeting.tag_list.join(','), class: "form-control", id: "tagForm" %>
      <div class="bootstrap-tagsinput">
      </div>
    </div>
    <div class="form-group form-search-tag">
      <%= f.label :tag_input%>
      <%= f.text_field :tag_input, class: "form-control", id: "tagInput" %>
      <ul class="list-group form-index-tag" id="tagList">
      </ul>
    </div>
    <div class="form-group form-create-meeting">
      <div class="btn btn-yellow" id="beforeButton">戻る</div>
      <button type="button" class="btn btn-yellow loading-link" onclick="submit();">プラン作成</button>
    </div>
  </div>
<% end %>
<%= javascript_bundle_tag "meetings_new" %>
<script>

function beforeLoad() {
  document.getElementById('loading').classList.remove('loaded');
}

function completeLoad() {
  document.getElementById('loading').classList.add('loaded');
};

completeLoad();

$(".loading-link").click(function() {
  beforeLoad();
});

$("form").submit(function() {
  beforeLoad();
})

window.onload = completeLoad;

$(function() {
  $("#tagInput").on("keyup", function() {
    let tag_input = $("#tagInput").val();

    $.ajax({
    type: "GET",
    url: "/tags/index",
    data: { 
            input: tag_input,
          },
    dataType: "json"
    })
    .done(function(tags) {
      $('#tagList').empty();
      if (tags.length !== 0) {
        tags.forEach(function(tag) {
          addTag(tag);
        });
      } else if (tag_input.length == 0) {
        return false;
      } else {
        addNoTag();
      }
    })
    .fail(function() {
      addTagAlert();
    })
  })

  // $("#tagInput").blur(function() {
  //   $("#tagList").empty();
  // })
});

function addTag(tag) {
  let html = `<a class="list-group-item tag-item" data-tag-id="${tag.id}" onclick="addTagToTagForm(this)">${tag.name}</a>`
  $("#tagList").append(html);
}

function addNoTag() {
  let html = `<li class="list-group-item">検索結果はありません</li>`
  $("#tagList").append(html);
}

function addTagAlert() {
  let html = `
      <div class="alert-box">
        <div class="alert alert-danger">
          <strong>通信エラーが発生しました。</strong>
        </div>
      </div>`
  $(".alert-box").replaceWith(html);
  setTimeout("$('.alert').fadeOut('slow')", 2000);
}

function addTagToTagForm(tag_name) {
  let html = `<span class="badge badge badge-info">
                ${tag_name.textContent}
                <span data-role="remove" onclick="tagRemove(this)" class="aaa">
                </span>
              </span>`
  if ($("#tagForm").val() === "") {
    $("#tagForm").val(tag_name.textContent);
  } else {
    let tags = $("#tagForm").val().split(',')
    for (i = 0; i < tags.length; i++) {
      if ( tags[i] === tag_name.textContent) {
        return false;
      }
    }
    $("#tagForm").val($("#tagForm").val() + "," + tag_name.textContent);
  };
  $("#tagInput").val("");
  $("#tagList").empty();
  $(".bootstrap-tagsinput").append(html);
}

function tagRemove(element_for_remove) {
  $(element_for_remove).parent().remove();
  let tags = $("#tagForm").val().split(',');
  tags = tags.filter(function(tag) {
    console.log(tag);
    return tag !== $(element_for_remove).parent().text().trim()
  })
  $("#tagForm").val(tags.join(','));
}
</script>
<style>
.tag-item {
  padding: .5rem 1rem !important;
}

#secondMeetingForm {
  position: relative;
}
.form-index-tag {
  position: absolute;
  width: 100%;
  z-index: 1;
}
.form-create-meeting {
  position: absolute;
}

.bootstrap-tagsinput {
  border: none !important;
  box-shadow: none !important;
}


.meeting-form {
  margin: 0 25% auto !important;
}
</style>